package ${package}

import java.util.List;
import org.springframework.beans.BeanUtils;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;

import com.baomidou.mybatisplus.core.toolkit.Wrappers;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import com.hank.common.response.Response;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import lombok.AllArgsConstructor;


/**
 * ${comments}
 *
 * @author ${author}
 * @date ${datetime}
 */
@RestController
@AllArgsConstructor
@RequestMapping("/${pathName}")
@Api(value = "${pathName}", tags = "${comments}管理")
public class ${className}Controller {

    private final  ${className}Service ${classname}Service;

    /**
     * 分页查询
     * @param page 分页对象
     * @param ${classname}Form ${comments}
     * @return
     */
    @ApiOperation(value = "分页查询", notes = "分页查询")
    @GetMapping("/page")
    public Page<${className}> get${className}Page(Page page, ${className}Form ${classname}Form) {
        ${className} ${classname} =new ${className}();
        BeanUtils.copyProperties(${classname}Form,${classname});
        return ${classname}Service.page(page, Wrappers.query(${classname}));
    }

    /**
     * 条件查询
     * @param ${classname}Form ${comments}
     * @return
     */
    @ApiOperation(value = "条件查询", notes = "条件查询")
    @GetMapping("/list")
    public List<${className}> get${className}List(${className}Form ${classname}Form) {
        ${className} ${classname} =new ${className}();
        BeanUtils.copyProperties(${classname}Form,${classname});
        return ${classname}Service.list(Wrappers.query(${classname}));
    }

    /**
     * 通过id查询${comments}
     * @param ${pk.lowerAttrName} id
     * @return Response
     */
    @ApiOperation(value = "通过id查询", notes = "通过id查询")
    @GetMapping("/{${pk.lowerAttrName}}")
    public ${className} getById(@PathVariable("${pk.lowerAttrName}") ${pk.attrType} ${pk.lowerAttrName}) {
        return ${classname}Service.getById(${pk.lowerAttrName});
    }

    /**
     * 新增${comments}
     * @param ${classname}Form ${comments}
     * @return Response
     */
    @ApiOperation(value = "新增${comments}", notes = "新增${comments}")
    @PostMapping
    public ${className} save(@RequestBody ${className}Form ${classname}Form) {
        ${className} ${classname} =new ${className}();
        BeanUtils.copyProperties(${classname}Form,${classname});
            ${classname}Service.save(${classname});
        return ${classname};
    }

    /**
     * 修改${comments}
     * @param ${classname}Form ${comments}
     * @return Response
     */
    @ApiOperation(value = "修改${comments}", notes = "修改${comments}")
    @PutMapping
    public Boolean updateById(@RequestBody @Validated(${className}Form.Update${className}Validate.class) ${className}Form ${classname}Form) {
        ${className} ${classname} =new ${className}();
        BeanUtils.copyProperties(${classname}Form,${classname});
        return ${classname}Service.updateById(${classname});
    }

    /**
     * 通过id删除${comments}
     * @param idList
     * @return Response
     */
    @ApiOperation(value = "通过ids删除${comments}", notes = "通过ids删除${comments}")
    @DeleteMapping()
    public Boolean removeByIds(@RequestBody List<${pk.attrType}> idList) {

        return ${classname}Service.removeByIds(idList);
    }

}
